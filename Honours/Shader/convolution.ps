////////////////////////////////////////////////////////////////////////////////
// Filename: convolution.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;

cbuffer ConvolutuionBuffer
{
	float weight0;
	float weight1;
	float weight2;
	float weight3;
	float weight4;
	float weight5;
	float weight6;
	float weight7;
	float weight8;
	float3 padding;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
	float2 texCoord1 : TEXCOORD1;
	float2 texCoord2 : TEXCOORD2;
	float2 texCoord3 : TEXCOORD3;
	float2 texCoord4 : TEXCOORD4;
	float2 texCoord5 : TEXCOORD5;
	float2 texCoord6 : TEXCOORD6;
	float2 texCoord7 : TEXCOORD7;
	float2 texCoord8 : TEXCOORD8;
	float2 texCoord9 : TEXCOORD9;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 ConvolutionPixelShader(PixelInputType input) : SV_TARGET
{
	//return shaderTexture.Sample(SampleType, input.tex) * weight4;
	float normalization;
	float4 color;

	// Initialize the color to black.
	color = float4(0.0f, 0.0f, 0.0f, 0.0f);

	// Add the nine pixels to the color by the specific weight of each.
	color += shaderTexture.Sample(SampleType, input.texCoord1) * weight0;
	color += shaderTexture.Sample(SampleType, input.texCoord2) * weight1;
	color += shaderTexture.Sample(SampleType, input.texCoord3) * weight2;
	color += shaderTexture.Sample(SampleType, input.texCoord4) * weight3;
	color += shaderTexture.Sample(SampleType, input.texCoord5) * weight4;
	color += shaderTexture.Sample(SampleType, input.texCoord6) * weight5;
	color += shaderTexture.Sample(SampleType, input.texCoord7) * weight6;
	color += shaderTexture.Sample(SampleType, input.texCoord8) * weight7;
	color += shaderTexture.Sample(SampleType, input.texCoord9) * weight8;

	// Set the alpha channel to one.
	color.a = 1.0f;
    return color;
}