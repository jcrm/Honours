////////////////////////////////////////////////////////////////////////////////
// Filename: merge.ps
////////////////////////////////////////////////////////////////////////////////

/////////////
// GLOBALS //
/////////////

Texture2D texture_one_;
Texture2D texture_two_;
SamplerState sample_type_;

cbuffer MergeBuffer
{
	float merge_ratio_;
	float3 padding_;
};

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position_ : SV_POSITION;
    float2 tex_ : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 MergePixelShader(PixelInputType input) : SV_TARGET
{
	float4 color = texture_one_.Sample(sample_type_, input.tex_);
	float4 second_texture = texture_two_.Sample(sample_type_, input.tex_);
	//add on a ration of the second texture to the first
	color= color + (merge_ratio_*second_texture);
	color.a = 1.0f;
    return color;
}
